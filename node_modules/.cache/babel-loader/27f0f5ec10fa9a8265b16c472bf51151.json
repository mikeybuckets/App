{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/**\n * Sticky.js\n * Library for sticky elements written in vanilla javascript. With this library you can easily set sticky elements on your website. It's also responsive.\n *\n * @version 1.3.0\n * @author Rafal Galus <biuro@rafalgalus.pl>\n * @website https://rgalus.github.io/sticky-js/\n * @repo https://github.com/rgalus/sticky-js\n * @license https://github.com/rgalus/sticky-js/blob/master/LICENSE\n */\n\n\nvar Sticky = /*#__PURE__*/function () {\n  /**\n   * Sticky instance constructor\n   * @constructor\n   * @param {string} selector - Selector which we can find elements\n   * @param {string} options - Global options for sticky elements (could be overwritten by data-{option}=\"\" attributes)\n   */\n  function Sticky() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Sticky);\n\n    this.selector = selector;\n    this.elements = [];\n    this.version = '1.3.0';\n    this.vp = this.getViewportSize();\n    this.body = document.querySelector('body');\n    this.options = {\n      wrap: options.wrap || false,\n      wrapWith: options.wrapWith || '<span></span>',\n      marginTop: options.marginTop || 0,\n      marginBottom: options.marginBottom || 0,\n      stickyFor: options.stickyFor || 0,\n      stickyClass: options.stickyClass || null,\n      stickyContainer: options.stickyContainer || 'body'\n    };\n    this.updateScrollTopPosition = this.updateScrollTopPosition.bind(this);\n    this.updateScrollTopPosition();\n    window.addEventListener('load', this.updateScrollTopPosition);\n    window.addEventListener('scroll', this.updateScrollTopPosition);\n    this.run();\n  }\n  /**\n   * Function that waits for page to be fully loaded and then renders & activates every sticky element found with specified selector\n   * @function\n   */\n\n\n  _createClass(Sticky, [{\n    key: \"run\",\n    value: function run() {\n      var _this = this; // wait for page to be fully loaded\n\n\n      var pageLoaded = setInterval(function () {\n        if (document.readyState === 'complete') {\n          clearInterval(pageLoaded);\n          var elements = document.querySelectorAll(_this.selector);\n\n          _this.forEach(elements, function (element) {\n            return _this.renderElement(element);\n          });\n        }\n      }, 10);\n    }\n    /**\n     * Function that assign needed variables for sticky element, that are used in future for calculations and other\n     * @function\n     * @param {node} element - Element to be rendered\n     */\n\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(element) {\n      var _this2 = this; // create container for variables needed in future\n\n\n      element.sticky = {}; // set default variables\n\n      element.sticky.active = false;\n      element.sticky.marginTop = parseInt(element.getAttribute('data-margin-top')) || this.options.marginTop;\n      element.sticky.marginBottom = parseInt(element.getAttribute('data-margin-bottom')) || this.options.marginBottom;\n      element.sticky.stickyFor = parseInt(element.getAttribute('data-sticky-for')) || this.options.stickyFor;\n      element.sticky.stickyClass = element.getAttribute('data-sticky-class') || this.options.stickyClass;\n      element.sticky.wrap = element.hasAttribute('data-sticky-wrap') ? true : this.options.wrap; // @todo attribute for stickyContainer\n      // element.sticky.stickyContainer = element.getAttribute('data-sticky-container') || this.options.stickyContainer;\n\n      element.sticky.stickyContainer = this.options.stickyContainer;\n      element.sticky.container = this.getStickyContainer(element);\n      element.sticky.container.rect = this.getRectangle(element.sticky.container);\n      element.sticky.rect = this.getRectangle(element); // fix when element is image that has not yet loaded and width, height = 0\n\n      if (element.tagName.toLowerCase() === 'img') {\n        element.onload = function () {\n          return element.sticky.rect = _this2.getRectangle(element);\n        };\n      }\n\n      if (element.sticky.wrap) {\n        this.wrapElement(element);\n      } // activate rendered element\n\n\n      this.activate(element);\n    }\n    /**\n     * Wraps element into placeholder element\n     * @function\n     * @param {node} element - Element to be wrapped\n     */\n\n  }, {\n    key: \"wrapElement\",\n    value: function wrapElement(element) {\n      element.insertAdjacentHTML('beforebegin', element.getAttribute('data-sticky-wrapWith') || this.options.wrapWith);\n      element.previousSibling.appendChild(element);\n    }\n    /**\n     * Function that activates element when specified conditions are met and then initalise events\n     * @function\n     * @param {node} element - Element to be activated\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate(element) {\n      if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n        element.sticky.active = true;\n      }\n\n      if (this.elements.indexOf(element) < 0) {\n        this.elements.push(element);\n      }\n\n      if (!element.sticky.resizeEvent) {\n        this.initResizeEvents(element);\n        element.sticky.resizeEvent = true;\n      }\n\n      if (!element.sticky.scrollEvent) {\n        this.initScrollEvents(element);\n        element.sticky.scrollEvent = true;\n      }\n\n      this.setPosition(element);\n    }\n    /**\n     * Function which is adding onResizeEvents to window listener and assigns function to element as resizeListener\n     * @function\n     * @param {node} element - Element for which resize events are initialised\n     */\n\n  }, {\n    key: \"initResizeEvents\",\n    value: function initResizeEvents(element) {\n      var _this3 = this;\n\n      element.sticky.resizeListener = function () {\n        return _this3.onResizeEvents(element);\n      };\n\n      window.addEventListener('resize', element.sticky.resizeListener);\n    }\n    /**\n     * Removes element listener from resize event\n     * @function\n     * @param {node} element - Element from which listener is deleted\n     */\n\n  }, {\n    key: \"destroyResizeEvents\",\n    value: function destroyResizeEvents(element) {\n      window.removeEventListener('resize', element.sticky.resizeListener);\n    }\n    /**\n     * Function which is fired when user resize window. It checks if element should be activated or deactivated and then run setPosition function\n     * @function\n     * @param {node} element - Element for which event function is fired\n     */\n\n  }, {\n    key: \"onResizeEvents\",\n    value: function onResizeEvents(element) {\n      this.vp = this.getViewportSize();\n      element.sticky.rect = this.getRectangle(element);\n      element.sticky.container.rect = this.getRectangle(element.sticky.container);\n\n      if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n        element.sticky.active = true;\n      } else if (element.sticky.rect.top + element.sticky.rect.height >= element.sticky.container.rect.top + element.sticky.container.rect.height || element.sticky.stickyFor >= this.vp.width && element.sticky.active) {\n        element.sticky.active = false;\n      }\n\n      this.setPosition(element);\n    }\n    /**\n     * Function which is adding onScrollEvents to window listener and assigns function to element as scrollListener\n     * @function\n     * @param {node} element - Element for which scroll events are initialised\n     */\n\n  }, {\n    key: \"initScrollEvents\",\n    value: function initScrollEvents(element) {\n      var _this4 = this;\n\n      element.sticky.scrollListener = function () {\n        return _this4.onScrollEvents(element);\n      };\n\n      window.addEventListener('scroll', element.sticky.scrollListener);\n    }\n    /**\n     * Removes element listener from scroll event\n     * @function\n     * @param {node} element - Element from which listener is deleted\n     */\n\n  }, {\n    key: \"destroyScrollEvents\",\n    value: function destroyScrollEvents(element) {\n      window.removeEventListener('scroll', element.sticky.scrollListener);\n    }\n    /**\n     * Function which is fired when user scroll window. If element is active, function is invoking setPosition function\n     * @function\n     * @param {node} element - Element for which event function is fired\n     */\n\n  }, {\n    key: \"onScrollEvents\",\n    value: function onScrollEvents(element) {\n      if (element.sticky && element.sticky.active) {\n        this.setPosition(element);\n      }\n    }\n    /**\n     * Main function for the library. Here are some condition calculations and css appending for sticky element when user scroll window\n     * @function\n     * @param {node} element - Element that will be positioned if it's active\n     */\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(element) {\n      this.css(element, {\n        position: '',\n        width: '',\n        top: '',\n        left: ''\n      });\n\n      if (this.vp.height < element.sticky.rect.height || !element.sticky.active) {\n        return;\n      }\n\n      if (!element.sticky.rect.width) {\n        element.sticky.rect = this.getRectangle(element);\n      }\n\n      if (element.sticky.wrap) {\n        this.css(element.parentNode, {\n          display: 'block',\n          width: element.sticky.rect.width + 'px',\n          height: element.sticky.rect.height + 'px'\n        });\n      }\n\n      if (element.sticky.rect.top === 0 && element.sticky.container === this.body) {\n        this.css(element, {\n          position: 'fixed',\n          top: element.sticky.rect.top + 'px',\n          left: element.sticky.rect.left + 'px',\n          width: element.sticky.rect.width + 'px'\n        });\n\n        if (element.sticky.stickyClass) {\n          element.classList.add(element.sticky.stickyClass);\n        }\n      } else if (this.scrollTop > element.sticky.rect.top - element.sticky.marginTop) {\n        this.css(element, {\n          position: 'fixed',\n          width: element.sticky.rect.width + 'px',\n          left: element.sticky.rect.left + 'px'\n        });\n\n        if (this.scrollTop + element.sticky.rect.height + element.sticky.marginTop > element.sticky.container.rect.top + element.sticky.container.offsetHeight - element.sticky.marginBottom) {\n          if (element.sticky.stickyClass) {\n            element.classList.remove(element.sticky.stickyClass);\n          }\n\n          this.css(element, {\n            top: element.sticky.container.rect.top + element.sticky.container.offsetHeight - (this.scrollTop + element.sticky.rect.height + element.sticky.marginBottom) + 'px'\n          });\n        } else {\n          if (element.sticky.stickyClass) {\n            element.classList.add(element.sticky.stickyClass);\n          }\n\n          this.css(element, {\n            top: element.sticky.marginTop + 'px'\n          });\n        }\n      } else {\n        if (element.sticky.stickyClass) {\n          element.classList.remove(element.sticky.stickyClass);\n        }\n\n        this.css(element, {\n          position: '',\n          width: '',\n          top: '',\n          left: ''\n        });\n\n        if (element.sticky.wrap) {\n          this.css(element.parentNode, {\n            display: '',\n            width: '',\n            height: ''\n          });\n        }\n      }\n    }\n    /**\n     * Function that updates element sticky rectangle (with sticky container), then activate or deactivate element, then update position if it's active\n     * @function\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this5 = this;\n\n      this.forEach(this.elements, function (element) {\n        element.sticky.rect = _this5.getRectangle(element);\n        element.sticky.container.rect = _this5.getRectangle(element.sticky.container);\n\n        _this5.activate(element);\n\n        _this5.setPosition(element);\n      });\n    }\n    /**\n     * Destroys sticky element, remove listeners\n     * @function\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this6 = this;\n\n      window.removeEventListener('load', this.updateScrollTopPosition);\n      window.removeEventListener('scroll', this.updateScrollTopPosition);\n      this.forEach(this.elements, function (element) {\n        _this6.destroyResizeEvents(element);\n\n        _this6.destroyScrollEvents(element);\n\n        delete element.sticky;\n      });\n    }\n    /**\n     * Function that returns container element in which sticky element is stuck (if is not specified, then it's stuck to body)\n     * @function\n     * @param {node} element - Element which sticky container are looked for\n     * @return {node} element - Sticky container\n     */\n\n  }, {\n    key: \"getStickyContainer\",\n    value: function getStickyContainer(element) {\n      var container = element.parentNode;\n\n      while (!container.hasAttribute('data-sticky-container') && !container.parentNode.querySelector(element.sticky.stickyContainer) && container !== this.body) {\n        container = container.parentNode;\n      }\n\n      return container;\n    }\n    /**\n     * Function that returns element rectangle & position (width, height, top, left)\n     * @function\n     * @param {node} element - Element which position & rectangle are returned\n     * @return {object}\n     */\n\n  }, {\n    key: \"getRectangle\",\n    value: function getRectangle(element) {\n      this.css(element, {\n        position: '',\n        width: '',\n        top: '',\n        left: ''\n      });\n      var width = Math.max(element.offsetWidth, element.clientWidth, element.scrollWidth);\n      var height = Math.max(element.offsetHeight, element.clientHeight, element.scrollHeight);\n      var top = 0;\n      var left = 0;\n\n      do {\n        top += element.offsetTop || 0;\n        left += element.offsetLeft || 0;\n        element = element.offsetParent;\n      } while (element);\n\n      return {\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      };\n    }\n    /**\n     * Function that returns viewport dimensions\n     * @function\n     * @return {object}\n     */\n\n  }, {\n    key: \"getViewportSize\",\n    value: function getViewportSize() {\n      return {\n        width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n        height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n      };\n    }\n    /**\n     * Function that updates window scroll position\n     * @function\n     * @return {number}\n     */\n\n  }, {\n    key: \"updateScrollTopPosition\",\n    value: function updateScrollTopPosition() {\n      this.scrollTop = (window.pageYOffset || document.scrollTop) - (document.clientTop || 0) || 0;\n    }\n    /**\n     * Helper function for loops\n     * @helper\n     * @param {array}\n     * @param {function} callback - Callback function (no need for explanation)\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(array, callback) {\n      for (var i = 0, len = array.length; i < len; i++) {\n        callback(array[i]);\n      }\n    }\n    /**\n     * Helper function to add/remove css properties for specified element.\n     * @helper\n     * @param {node} element - DOM element\n     * @param {object} properties - CSS properties that will be added/removed from specified element\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(element, properties) {\n      for (var property in properties) {\n        if (properties.hasOwnProperty(property)) {\n          element.style[property] = properties[property];\n        }\n      }\n    }\n  }]);\n\n  return Sticky;\n}();\n/**\n * Export function that supports AMD, CommonJS and Plain Browser.\n */\n\n\n(function (root, factory) {\n  if (typeof exports !== 'undefined') {\n    module.exports = factory;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory;\n    });\n  } else {\n    root.Sticky = factory;\n  }\n})(this, Sticky);","map":{"version":3,"sources":["C:/Users/MC/Desktop/Builds/simple-react/node_modules/sticky-js/dist/sticky.compile.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","Sticky","selector","arguments","undefined","options","elements","version","vp","getViewportSize","body","document","querySelector","wrap","wrapWith","marginTop","marginBottom","stickyFor","stickyClass","stickyContainer","updateScrollTopPosition","bind","window","addEventListener","run","value","_this","pageLoaded","setInterval","readyState","clearInterval","querySelectorAll","forEach","element","renderElement","_this2","sticky","active","parseInt","getAttribute","hasAttribute","container","getStickyContainer","rect","getRectangle","tagName","toLowerCase","onload","wrapElement","activate","insertAdjacentHTML","previousSibling","appendChild","top","height","width","indexOf","push","resizeEvent","initResizeEvents","scrollEvent","initScrollEvents","setPosition","_this3","resizeListener","onResizeEvents","destroyResizeEvents","removeEventListener","_this4","scrollListener","onScrollEvents","destroyScrollEvents","css","position","left","parentNode","display","classList","add","scrollTop","offsetHeight","remove","update","_this5","destroy","_this6","Math","max","offsetWidth","clientWidth","scrollWidth","clientHeight","scrollHeight","offsetTop","offsetLeft","offsetParent","documentElement","innerWidth","innerHeight","pageYOffset","clientTop","array","callback","len","properties","property","hasOwnProperty","style","root","factory","exports","module","define","amd"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Sticky.js\n * Library for sticky elements written in vanilla javascript. With this library you can easily set sticky elements on your website. It's also responsive.\n *\n * @version 1.3.0\n * @author Rafal Galus <biuro@rafalgalus.pl>\n * @website https://rgalus.github.io/sticky-js/\n * @repo https://github.com/rgalus/sticky-js\n * @license https://github.com/rgalus/sticky-js/blob/master/LICENSE\n */\nvar Sticky = /*#__PURE__*/function () {\n  /**\n   * Sticky instance constructor\n   * @constructor\n   * @param {string} selector - Selector which we can find elements\n   * @param {string} options - Global options for sticky elements (could be overwritten by data-{option}=\"\" attributes)\n   */\n  function Sticky() {\n    var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Sticky);\n\n    this.selector = selector;\n    this.elements = [];\n    this.version = '1.3.0';\n    this.vp = this.getViewportSize();\n    this.body = document.querySelector('body');\n    this.options = {\n      wrap: options.wrap || false,\n      wrapWith: options.wrapWith || '<span></span>',\n      marginTop: options.marginTop || 0,\n      marginBottom: options.marginBottom || 0,\n      stickyFor: options.stickyFor || 0,\n      stickyClass: options.stickyClass || null,\n      stickyContainer: options.stickyContainer || 'body'\n    };\n    this.updateScrollTopPosition = this.updateScrollTopPosition.bind(this);\n    this.updateScrollTopPosition();\n    window.addEventListener('load', this.updateScrollTopPosition);\n    window.addEventListener('scroll', this.updateScrollTopPosition);\n    this.run();\n  }\n  /**\n   * Function that waits for page to be fully loaded and then renders & activates every sticky element found with specified selector\n   * @function\n   */\n\n\n  _createClass(Sticky, [{\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      // wait for page to be fully loaded\n      var pageLoaded = setInterval(function () {\n        if (document.readyState === 'complete') {\n          clearInterval(pageLoaded);\n          var elements = document.querySelectorAll(_this.selector);\n\n          _this.forEach(elements, function (element) {\n            return _this.renderElement(element);\n          });\n        }\n      }, 10);\n    }\n    /**\n     * Function that assign needed variables for sticky element, that are used in future for calculations and other\n     * @function\n     * @param {node} element - Element to be rendered\n     */\n\n  }, {\n    key: \"renderElement\",\n    value: function renderElement(element) {\n      var _this2 = this;\n\n      // create container for variables needed in future\n      element.sticky = {}; // set default variables\n\n      element.sticky.active = false;\n      element.sticky.marginTop = parseInt(element.getAttribute('data-margin-top')) || this.options.marginTop;\n      element.sticky.marginBottom = parseInt(element.getAttribute('data-margin-bottom')) || this.options.marginBottom;\n      element.sticky.stickyFor = parseInt(element.getAttribute('data-sticky-for')) || this.options.stickyFor;\n      element.sticky.stickyClass = element.getAttribute('data-sticky-class') || this.options.stickyClass;\n      element.sticky.wrap = element.hasAttribute('data-sticky-wrap') ? true : this.options.wrap; // @todo attribute for stickyContainer\n      // element.sticky.stickyContainer = element.getAttribute('data-sticky-container') || this.options.stickyContainer;\n\n      element.sticky.stickyContainer = this.options.stickyContainer;\n      element.sticky.container = this.getStickyContainer(element);\n      element.sticky.container.rect = this.getRectangle(element.sticky.container);\n      element.sticky.rect = this.getRectangle(element); // fix when element is image that has not yet loaded and width, height = 0\n\n      if (element.tagName.toLowerCase() === 'img') {\n        element.onload = function () {\n          return element.sticky.rect = _this2.getRectangle(element);\n        };\n      }\n\n      if (element.sticky.wrap) {\n        this.wrapElement(element);\n      } // activate rendered element\n\n\n      this.activate(element);\n    }\n    /**\n     * Wraps element into placeholder element\n     * @function\n     * @param {node} element - Element to be wrapped\n     */\n\n  }, {\n    key: \"wrapElement\",\n    value: function wrapElement(element) {\n      element.insertAdjacentHTML('beforebegin', element.getAttribute('data-sticky-wrapWith') || this.options.wrapWith);\n      element.previousSibling.appendChild(element);\n    }\n    /**\n     * Function that activates element when specified conditions are met and then initalise events\n     * @function\n     * @param {node} element - Element to be activated\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate(element) {\n      if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n        element.sticky.active = true;\n      }\n\n      if (this.elements.indexOf(element) < 0) {\n        this.elements.push(element);\n      }\n\n      if (!element.sticky.resizeEvent) {\n        this.initResizeEvents(element);\n        element.sticky.resizeEvent = true;\n      }\n\n      if (!element.sticky.scrollEvent) {\n        this.initScrollEvents(element);\n        element.sticky.scrollEvent = true;\n      }\n\n      this.setPosition(element);\n    }\n    /**\n     * Function which is adding onResizeEvents to window listener and assigns function to element as resizeListener\n     * @function\n     * @param {node} element - Element for which resize events are initialised\n     */\n\n  }, {\n    key: \"initResizeEvents\",\n    value: function initResizeEvents(element) {\n      var _this3 = this;\n\n      element.sticky.resizeListener = function () {\n        return _this3.onResizeEvents(element);\n      };\n\n      window.addEventListener('resize', element.sticky.resizeListener);\n    }\n    /**\n     * Removes element listener from resize event\n     * @function\n     * @param {node} element - Element from which listener is deleted\n     */\n\n  }, {\n    key: \"destroyResizeEvents\",\n    value: function destroyResizeEvents(element) {\n      window.removeEventListener('resize', element.sticky.resizeListener);\n    }\n    /**\n     * Function which is fired when user resize window. It checks if element should be activated or deactivated and then run setPosition function\n     * @function\n     * @param {node} element - Element for which event function is fired\n     */\n\n  }, {\n    key: \"onResizeEvents\",\n    value: function onResizeEvents(element) {\n      this.vp = this.getViewportSize();\n      element.sticky.rect = this.getRectangle(element);\n      element.sticky.container.rect = this.getRectangle(element.sticky.container);\n\n      if (element.sticky.rect.top + element.sticky.rect.height < element.sticky.container.rect.top + element.sticky.container.rect.height && element.sticky.stickyFor < this.vp.width && !element.sticky.active) {\n        element.sticky.active = true;\n      } else if (element.sticky.rect.top + element.sticky.rect.height >= element.sticky.container.rect.top + element.sticky.container.rect.height || element.sticky.stickyFor >= this.vp.width && element.sticky.active) {\n        element.sticky.active = false;\n      }\n\n      this.setPosition(element);\n    }\n    /**\n     * Function which is adding onScrollEvents to window listener and assigns function to element as scrollListener\n     * @function\n     * @param {node} element - Element for which scroll events are initialised\n     */\n\n  }, {\n    key: \"initScrollEvents\",\n    value: function initScrollEvents(element) {\n      var _this4 = this;\n\n      element.sticky.scrollListener = function () {\n        return _this4.onScrollEvents(element);\n      };\n\n      window.addEventListener('scroll', element.sticky.scrollListener);\n    }\n    /**\n     * Removes element listener from scroll event\n     * @function\n     * @param {node} element - Element from which listener is deleted\n     */\n\n  }, {\n    key: \"destroyScrollEvents\",\n    value: function destroyScrollEvents(element) {\n      window.removeEventListener('scroll', element.sticky.scrollListener);\n    }\n    /**\n     * Function which is fired when user scroll window. If element is active, function is invoking setPosition function\n     * @function\n     * @param {node} element - Element for which event function is fired\n     */\n\n  }, {\n    key: \"onScrollEvents\",\n    value: function onScrollEvents(element) {\n      if (element.sticky && element.sticky.active) {\n        this.setPosition(element);\n      }\n    }\n    /**\n     * Main function for the library. Here are some condition calculations and css appending for sticky element when user scroll window\n     * @function\n     * @param {node} element - Element that will be positioned if it's active\n     */\n\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(element) {\n      this.css(element, {\n        position: '',\n        width: '',\n        top: '',\n        left: ''\n      });\n\n      if (this.vp.height < element.sticky.rect.height || !element.sticky.active) {\n        return;\n      }\n\n      if (!element.sticky.rect.width) {\n        element.sticky.rect = this.getRectangle(element);\n      }\n\n      if (element.sticky.wrap) {\n        this.css(element.parentNode, {\n          display: 'block',\n          width: element.sticky.rect.width + 'px',\n          height: element.sticky.rect.height + 'px'\n        });\n      }\n\n      if (element.sticky.rect.top === 0 && element.sticky.container === this.body) {\n        this.css(element, {\n          position: 'fixed',\n          top: element.sticky.rect.top + 'px',\n          left: element.sticky.rect.left + 'px',\n          width: element.sticky.rect.width + 'px'\n        });\n\n        if (element.sticky.stickyClass) {\n          element.classList.add(element.sticky.stickyClass);\n        }\n      } else if (this.scrollTop > element.sticky.rect.top - element.sticky.marginTop) {\n        this.css(element, {\n          position: 'fixed',\n          width: element.sticky.rect.width + 'px',\n          left: element.sticky.rect.left + 'px'\n        });\n\n        if (this.scrollTop + element.sticky.rect.height + element.sticky.marginTop > element.sticky.container.rect.top + element.sticky.container.offsetHeight - element.sticky.marginBottom) {\n          if (element.sticky.stickyClass) {\n            element.classList.remove(element.sticky.stickyClass);\n          }\n\n          this.css(element, {\n            top: element.sticky.container.rect.top + element.sticky.container.offsetHeight - (this.scrollTop + element.sticky.rect.height + element.sticky.marginBottom) + 'px'\n          });\n        } else {\n          if (element.sticky.stickyClass) {\n            element.classList.add(element.sticky.stickyClass);\n          }\n\n          this.css(element, {\n            top: element.sticky.marginTop + 'px'\n          });\n        }\n      } else {\n        if (element.sticky.stickyClass) {\n          element.classList.remove(element.sticky.stickyClass);\n        }\n\n        this.css(element, {\n          position: '',\n          width: '',\n          top: '',\n          left: ''\n        });\n\n        if (element.sticky.wrap) {\n          this.css(element.parentNode, {\n            display: '',\n            width: '',\n            height: ''\n          });\n        }\n      }\n    }\n    /**\n     * Function that updates element sticky rectangle (with sticky container), then activate or deactivate element, then update position if it's active\n     * @function\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var _this5 = this;\n\n      this.forEach(this.elements, function (element) {\n        element.sticky.rect = _this5.getRectangle(element);\n        element.sticky.container.rect = _this5.getRectangle(element.sticky.container);\n\n        _this5.activate(element);\n\n        _this5.setPosition(element);\n      });\n    }\n    /**\n     * Destroys sticky element, remove listeners\n     * @function\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this6 = this;\n\n      window.removeEventListener('load', this.updateScrollTopPosition);\n      window.removeEventListener('scroll', this.updateScrollTopPosition);\n      this.forEach(this.elements, function (element) {\n        _this6.destroyResizeEvents(element);\n\n        _this6.destroyScrollEvents(element);\n\n        delete element.sticky;\n      });\n    }\n    /**\n     * Function that returns container element in which sticky element is stuck (if is not specified, then it's stuck to body)\n     * @function\n     * @param {node} element - Element which sticky container are looked for\n     * @return {node} element - Sticky container\n     */\n\n  }, {\n    key: \"getStickyContainer\",\n    value: function getStickyContainer(element) {\n      var container = element.parentNode;\n\n      while (!container.hasAttribute('data-sticky-container') && !container.parentNode.querySelector(element.sticky.stickyContainer) && container !== this.body) {\n        container = container.parentNode;\n      }\n\n      return container;\n    }\n    /**\n     * Function that returns element rectangle & position (width, height, top, left)\n     * @function\n     * @param {node} element - Element which position & rectangle are returned\n     * @return {object}\n     */\n\n  }, {\n    key: \"getRectangle\",\n    value: function getRectangle(element) {\n      this.css(element, {\n        position: '',\n        width: '',\n        top: '',\n        left: ''\n      });\n      var width = Math.max(element.offsetWidth, element.clientWidth, element.scrollWidth);\n      var height = Math.max(element.offsetHeight, element.clientHeight, element.scrollHeight);\n      var top = 0;\n      var left = 0;\n\n      do {\n        top += element.offsetTop || 0;\n        left += element.offsetLeft || 0;\n        element = element.offsetParent;\n      } while (element);\n\n      return {\n        top: top,\n        left: left,\n        width: width,\n        height: height\n      };\n    }\n    /**\n     * Function that returns viewport dimensions\n     * @function\n     * @return {object}\n     */\n\n  }, {\n    key: \"getViewportSize\",\n    value: function getViewportSize() {\n      return {\n        width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n        height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n      };\n    }\n    /**\n     * Function that updates window scroll position\n     * @function\n     * @return {number}\n     */\n\n  }, {\n    key: \"updateScrollTopPosition\",\n    value: function updateScrollTopPosition() {\n      this.scrollTop = (window.pageYOffset || document.scrollTop) - (document.clientTop || 0) || 0;\n    }\n    /**\n     * Helper function for loops\n     * @helper\n     * @param {array}\n     * @param {function} callback - Callback function (no need for explanation)\n     */\n\n  }, {\n    key: \"forEach\",\n    value: function forEach(array, callback) {\n      for (var i = 0, len = array.length; i < len; i++) {\n        callback(array[i]);\n      }\n    }\n    /**\n     * Helper function to add/remove css properties for specified element.\n     * @helper\n     * @param {node} element - DOM element\n     * @param {object} properties - CSS properties that will be added/removed from specified element\n     */\n\n  }, {\n    key: \"css\",\n    value: function css(element, properties) {\n      for (var property in properties) {\n        if (properties.hasOwnProperty(property)) {\n          element.style[property] = properties[property];\n        }\n      }\n    }\n  }]);\n\n  return Sticky;\n}();\n/**\n * Export function that supports AMD, CommonJS and Plain Browser.\n */\n\n\n(function (root, factory) {\n  if (typeof exports !== 'undefined') {\n    module.exports = factory;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory;\n    });\n  } else {\n    root.Sticky = factory;\n  }\n})(this, Sticky);"]},"metadata":{},"sourceType":"script"}